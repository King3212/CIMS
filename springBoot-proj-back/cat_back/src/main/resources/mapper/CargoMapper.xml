<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cat_back.mapper.CargoMapper" >
  <resultMap id="BaseResultMap" type="com.cat_back.model.Cargo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="price_in" property="priceIn" jdbcType="DECIMAL" />
    <result column="price_out" property="priceOut" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="pic_addr" property="picAddr" jdbcType="VARCHAR" />
    <result column="fineness" property="fineness" jdbcType="VARCHAR" />
    <result column="stores_id" property="storesId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, brand, price_in, price_out, description, addr, pic_addr, fineness, stores_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cat_back.model.CargoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cargos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cargos
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cargos
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cat_back.model.CargoExample" >
    delete from cargos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cat_back.model.Cargo" >
    insert into cargos (id, type, brand, 
      price_in, price_out, description, 
      addr, pic_addr, fineness, 
      stores_id)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{priceIn,jdbcType=DECIMAL}, #{priceOut,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, 
      #{addr,jdbcType=VARCHAR}, #{picAddr,jdbcType=VARCHAR}, #{fineness,jdbcType=VARCHAR}, 
      #{storesId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cat_back.model.Cargo" >
    insert into cargos
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="priceIn != null" >
        price_in,
      </if>
      <if test="priceOut != null" >
        price_out,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="picAddr != null" >
        pic_addr,
      </if>
      <if test="fineness != null" >
        fineness,
      </if>
      <if test="storesId != null" >
        stores_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="priceIn != null" >
        #{priceIn,jdbcType=DECIMAL},
      </if>
      <if test="priceOut != null" >
        #{priceOut,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="picAddr != null" >
        #{picAddr,jdbcType=VARCHAR},
      </if>
      <if test="fineness != null" >
        #{fineness,jdbcType=VARCHAR},
      </if>
      <if test="storesId != null" >
        #{storesId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cat_back.model.CargoExample" resultType="java.lang.Integer" >
    select count(*) from cargos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cargos
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.priceIn != null" >
        price_in = #{record.priceIn,jdbcType=DECIMAL},
      </if>
      <if test="record.priceOut != null" >
        price_out = #{record.priceOut,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.addr != null" >
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.picAddr != null" >
        pic_addr = #{record.picAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.fineness != null" >
        fineness = #{record.fineness,jdbcType=VARCHAR},
      </if>
      <if test="record.storesId != null" >
        stores_id = #{record.storesId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cargos
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      price_in = #{record.priceIn,jdbcType=DECIMAL},
      price_out = #{record.priceOut,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      addr = #{record.addr,jdbcType=VARCHAR},
      pic_addr = #{record.picAddr,jdbcType=VARCHAR},
      fineness = #{record.fineness,jdbcType=VARCHAR},
      stores_id = #{record.storesId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cat_back.model.Cargo" >
    update cargos
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="priceIn != null" >
        price_in = #{priceIn,jdbcType=DECIMAL},
      </if>
      <if test="priceOut != null" >
        price_out = #{priceOut,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="picAddr != null" >
        pic_addr = #{picAddr,jdbcType=VARCHAR},
      </if>
      <if test="fineness != null" >
        fineness = #{fineness,jdbcType=VARCHAR},
      </if>
      <if test="storesId != null" >
        stores_id = #{storesId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cat_back.model.Cargo" >
    update cargos
    set type = #{type,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      price_in = #{priceIn,jdbcType=DECIMAL},
      price_out = #{priceOut,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      pic_addr = #{picAddr,jdbcType=VARCHAR},
      fineness = #{fineness,jdbcType=VARCHAR},
      stores_id = #{storesId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>